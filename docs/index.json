[{"content":"1.命令行安装 直接在终端运行命令进行安装\n$ sudo apt install nginx 如果需要自定义安装，可以参考官方文档\nhttp://nginx.org/en/linux_packages.html#Ubuntu\n在浏览器输入服务器地址，出现 nginx 默认页面表示安装成功\n2.查看默认配置 $ cat /etc/nginx/nginx.conf user www-data; worker_processes auto; pid /run/nginx.pid; include /etc/nginx/modules-enabled/*.conf; events { worker_connections 768; # multi_accept on; } http { ## # Basic Settings ## sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; # server_tokens off; # server_names_hash_bucket_size 64; # server_name_in_redirect off; include /etc/nginx/mime.types; default_type application/octet-stream; ## # SSL Settings ## ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE ssl_prefer_server_ciphers on; ## # Logging Settings ## access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; ## # Gzip Settings ## gzip on; # gzip_vary on; # gzip_proxied any; # gzip_comp_level 6; # gzip_buffers 16 8k; # gzip_http_version 1.1; # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; ## # Virtual Host Configs ## include /etc/nginx/conf.d/*.conf; include /etc/nginx/sites-enabled/*; } #mail { # # See sample authentication script at: # # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript #  # # auth_http localhost/auth.php; # # pop3_capabilities \u0026#34;TOP\u0026#34; \u0026#34;USER\u0026#34;; # # imap_capabilities \u0026#34;IMAP4rev1\u0026#34; \u0026#34;UIDPLUS\u0026#34;; #  # server { # listen localhost:110; # protocol pop3; # proxy on; # } #  # server { # listen localhost:143; # protocol imap; # proxy on; # } #} 默认页面的服务器对应这一行配置\ninclude /etc/nginx/sites-enabled/*; 再看一下默认配置长什么样\n$ cat /etc/nginx/sites-enabled/default ## # You should look at the following URL\u0026#39;s in order to grasp a solid understanding # of Nginx configuration files in order to fully unleash the power of Nginx. # https://www.nginx.com/resources/wiki/start/ # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/ # https://wiki.debian.org/Nginx/DirectoryStructure # # In most cases, administrators will remove this file from sites-enabled/ and # leave it as reference inside of sites-available where it will continue to be # updated by the nginx packaging team. # # This file will automatically load configuration files provided by other # applications, such as Drupal or Wordpress. These applications will be made # available underneath a path with that package name, such as /drupal8. # # Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples. ## # Default server configuration # server { listen 80 default_server; listen [::]:80 default_server; # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic. # See: https://bugs.debian.org/773332 # # Read up on ssl_ciphers to ensure a secure configuration. # See: https://bugs.debian.org/765782 # # Self signed certs generated by the ssl-cert package # Don\u0026#39;t use them in a production server! # # include snippets/snakeoil.conf; root /var/www/html; # Add index.php to the list if you are using PHP index index.html index.htm index.nginx-debian.html; server_name _; location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } # pass PHP scripts to FastCGI server # #location ~ \\.php$ { # include snippets/fastcgi-php.conf; # # # With php-fpm (or other unix sockets): # fastcgi_pass unix:/var/run/php/php7.4-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; #} # deny access to .htaccess files, if Apache\u0026#39;s document root # concurs with nginx\u0026#39;s one # #location ~ /\\.ht { # deny all; #} } # Virtual Host configuration for example.com # # You can move that to a different file under sites-available/ and symlink that # to sites-enabled/ to enable it. # #server { # listen 80; # listen [::]:80; # # server_name example.com; # # root /var/www/example.com; # index index.html; # # location / { # try_files $uri $uri/ =404; # } #} 可以看到只配置了一个静态页面 注释掉默认配置\n# include /etc/nginx/sites-enabled/*; 3.添加自定义配置 在配置文件目录 /etc/nginx/conf.d/ 下添加自己的配置并保存\n4.检查配置是否正确 $ sudo nginx -t 出现以下内容表示没问题了\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful 配置没问题的话就可以重启服务器了\n$ sudo service nginx restart 然后就可以愉快的使用啦\n","permalink":"https://wuxiaosu.github.io/posts/ubuntu%E5%AE%89%E8%A3%85nginx/","summary":"1.命令行安装 直接在终端运行命令进行安装\n$ sudo apt install nginx 如果需要自定义安装，可以参考官方文档\nhttp://nginx.org/en/linux_packages.html#Ubuntu\n在浏览器输入服务器地址，出现 nginx 默认页面表示安装成功\n2.查看默认配置 $ cat /etc/nginx/nginx.conf user www-data; worker_processes auto; pid /run/nginx.pid; include /etc/nginx/modules-enabled/*.conf; events { worker_connections 768; # multi_accept on; } http { ## # Basic Settings ## sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; # server_tokens off; # server_names_hash_bucket_size 64; # server_name_in_redirect off; include /etc/nginx/mime.types; default_type application/octet-stream; ## # SSL Settings ## ssl_protocols TLSv1 TLSv1.1 TLSv1.","title":"Ubuntu安装nginx"},{"content":"0.下载 baksmali.jar 、smali.jar 下载地址 https://bitbucket.org/JesusFreke/smali/downloads/\nGithub 地址 https://github.com/JesusFreke/smali\n1. odex -\u0026gt; smali files 把手机系统 /system/framework 下的内容拷贝到工作目录，和需要转换的 .odex、.vdex 文件也拷贝至目录，目录结构如下\n-system -a.odex -a.vdex -baksmali-2.5.2.jar -smali-2.5.2.jar 然后执行以下命令\njava -jar baksmali-2.5.2.jar deodex a.odex -b ./system/framework/arm64/boot.oat -o out -deodex : 指定 odex 文件\n-b : 指定 bootclasspath 文件\n-o : 指定 smali 输出目录\n2. smali files -\u0026gt; dex java -jar smali-2.5.2.jar assemble out -o a.dex -assemble : 指定 smali files 文件夹\n-o : 指定输出文件名\n3. 更多 https://www.cnblogs.com/ysk-china/p/7162203.html?utm_source=itdadao\u0026amp;utm_medium=referral\n","permalink":"https://wuxiaosu.github.io/posts/android%E5%8F%8D%E7%BC%96%E8%AF%91odex/","summary":"0.下载 baksmali.jar 、smali.jar 下载地址 https://bitbucket.org/JesusFreke/smali/downloads/\nGithub 地址 https://github.com/JesusFreke/smali\n1. odex -\u0026gt; smali files 把手机系统 /system/framework 下的内容拷贝到工作目录，和需要转换的 .odex、.vdex 文件也拷贝至目录，目录结构如下\n-system -a.odex -a.vdex -baksmali-2.5.2.jar -smali-2.5.2.jar 然后执行以下命令\njava -jar baksmali-2.5.2.jar deodex a.odex -b ./system/framework/arm64/boot.oat -o out -deodex : 指定 odex 文件\n-b : 指定 bootclasspath 文件\n-o : 指定 smali 输出目录\n2. smali files -\u0026gt; dex java -jar smali-2.5.2.jar assemble out -o a.dex -assemble : 指定 smali files 文件夹\n-o : 指定输出文件名\n3. 更多 https://www.","title":"Android反编译odex"},{"content":"0.省流助手 pyinstaller -F myfile.py 1.安装 Pyinstaller 1.1 先安装 pywin32 pip install pywin32 1.2 再安装 Pyinstaller pip install PyInstaller 2.使用 Pyinstaller pyinstaller -F myfile.py 2.1 输入参数含义 -F, --onefile 生成单个可执行文件 如果一切正常，会在 .py 文件同目录下的 dist 目录生成 .exe 文件\n查看更多参数\npyinstaller -h ","permalink":"https://wuxiaosu.github.io/posts/python%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85/","summary":"0.省流助手 pyinstaller -F myfile.py 1.安装 Pyinstaller 1.1 先安装 pywin32 pip install pywin32 1.2 再安装 Pyinstaller pip install PyInstaller 2.使用 Pyinstaller pyinstaller -F myfile.py 2.1 输入参数含义 -F, --onefile 生成单个可执行文件 如果一切正常，会在 .py 文件同目录下的 dist 目录生成 .exe 文件\n查看更多参数\npyinstaller -h ","title":"Python文件打包"},{"content":" http://ipinfo.io/json  { \u0026#34;ip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;hostname\u0026#34;: \u0026#34;132.111.42.59.broad.gz.gd.dynamic.163data.com.cn\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Lianjiang\u0026#34;, \u0026#34;region\u0026#34;: \u0026#34;Guangdong\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CN\u0026#34;, \u0026#34;loc\u0026#34;: \u0026#34;21.6467,110.2817\u0026#34;, \u0026#34;org\u0026#34;: \u0026#34;AS4134 CHINANET-BACKBONE\u0026#34;, \u0026#34;timezone\u0026#34;: \u0026#34;Asia/Urumqi\u0026#34;, \u0026#34;readme\u0026#34;: \u0026#34;https://ipinfo.io/missingauth\u0026#34; }  http://whois.pconline.com.cn/ip.jsp  广东省广州市天河区 电信ADSL  http://pv.sohu.com/cityjson?ie=utf-8  var returnCitySN = {\u0026#34;cip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;cid\u0026#34;: \u0026#34;440106\u0026#34;, \u0026#34;cname\u0026#34;: \u0026#34;广东省广州市天河区\u0026#34;}; ","permalink":"https://wuxiaosu.github.io/posts/%E5%87%A0%E4%B8%AAip%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E6%8E%A5%E5%8F%A3/","summary":" http://ipinfo.io/json  { \u0026#34;ip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;hostname\u0026#34;: \u0026#34;132.111.42.59.broad.gz.gd.dynamic.163data.com.cn\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Lianjiang\u0026#34;, \u0026#34;region\u0026#34;: \u0026#34;Guangdong\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CN\u0026#34;, \u0026#34;loc\u0026#34;: \u0026#34;21.6467,110.2817\u0026#34;, \u0026#34;org\u0026#34;: \u0026#34;AS4134 CHINANET-BACKBONE\u0026#34;, \u0026#34;timezone\u0026#34;: \u0026#34;Asia/Urumqi\u0026#34;, \u0026#34;readme\u0026#34;: \u0026#34;https://ipinfo.io/missingauth\u0026#34; }  http://whois.pconline.com.cn/ip.jsp  广东省广州市天河区 电信ADSL  http://pv.sohu.com/cityjson?ie=utf-8  var returnCitySN = {\u0026#34;cip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;cid\u0026#34;: \u0026#34;440106\u0026#34;, \u0026#34;cname\u0026#34;: \u0026#34;广东省广州市天河区\u0026#34;}; ","title":"几个ip信息获取接口"},{"content":"sql sqlite 时间戳转日期 selectdatetime(1613714753,\u0026#39;unixepoch\u0026#39;,\u0026#39;localtime\u0026#39;);输出\n2021-02-1914:05:53当前时间戳 selectstrftime(\u0026#39;%s\u0026#39;,\u0026#39;now\u0026#39;);输出\n1613714753查询所有表 SELECT*FROMsqlite_master","permalink":"https://wuxiaosu.github.io/posts/sql/","summary":"sql sqlite 时间戳转日期 selectdatetime(1613714753,\u0026#39;unixepoch\u0026#39;,\u0026#39;localtime\u0026#39;);输出\n2021-02-1914:05:53当前时间戳 selectstrftime(\u0026#39;%s\u0026#39;,\u0026#39;now\u0026#39;);输出\n1613714753查询所有表 SELECT*FROMsqlite_master","title":"sqlite常用操作"},{"content":"adb 常用命令 1.查看最上层 Activity 名字  Linux  adb shell dumpsys activity | grep \u0026#34;mResumedActivity\u0026#34;  Windows  adb shell dumpsys activity activities | findstr mResumedActivity 2.启动组件  启动 Activity  adb shell am start -n com.google.android.network2/com.my.MainActivity  启动 Service  adb shell am startservice -n com.google.android.network2/com.my.MainActivity  发送 Broadcast  adb shell am broadcast -a android.intent.action.BOOT_COMPLETED 3.重启  重启到 Recovery 界面  adb reboot recovery  重启到 bootloader 界面  adb reboot bootloader 4.其他  强制结束应用  adb shell am force-stop \u0026lt;PACKAGE\u0026gt; 5.以调试模式启动应用 adb shell am set-debug-app -w {package_name} 清除调试模式\nadb shell am clear-debug-app 6.查看应用安装路径  列出所有安装的包  adb shell pm list packages -f  查看安装包路径  adb shell pm path {package_name}  查看安装包路径  adb shell dumpsys package {package_name} | findstr codePath\radb shell dumpsys package {package_name} | grep codePath  卸载系统应用  adb shell pm uninstall --user 0 {package_name} ","permalink":"https://wuxiaosu.github.io/posts/adb%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","summary":"adb 常用命令 1.查看最上层 Activity 名字  Linux  adb shell dumpsys activity | grep \u0026#34;mResumedActivity\u0026#34;  Windows  adb shell dumpsys activity activities | findstr mResumedActivity 2.启动组件  启动 Activity  adb shell am start -n com.google.android.network2/com.my.MainActivity  启动 Service  adb shell am startservice -n com.google.android.network2/com.my.MainActivity  发送 Broadcast  adb shell am broadcast -a android.intent.action.BOOT_COMPLETED 3.重启  重启到 Recovery 界面  adb reboot recovery  重启到 bootloader 界面  adb reboot bootloader 4.","title":"adb常用命令"},{"content":"mysql 相关  开启 mysql 远程访问  确认端口是否对外开放，默认是不开放的\nnetstat -an | grep 3306 输出如下\ntcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN 修改配置文件（不同版本可能位置不同）\n/etc/mysql/mysql.conf.d/mysqld.cnf 注释掉\n# bind-address = 127.0.0.1  为新增主键赋值  SET@mycnt=0;UPDATExxxxxSETRowNum=(@mycnt:=@mycnt+1) 使用 native_password 连接  ALTERUSER\u0026#39;user\u0026#39;@\u0026#39;%\u0026#39;IDENTIFIEDWITHmysql_native_passwordBY\u0026#39;password\u0026#39;;flushprivileges; 使用默认密码修改数据库密码  查看默认用户密码\ncd /etc/mysql sudo cat debian.cnf # Automatically generated for Debian scripts. DO NOT TOUCH! [client] host = localhost user = debian-sys-maint password = G0Gis29yv0dtUhng socket = /var/run/mysqld/mysqld.sock [mysql_upgrade] host = localhost user = debian-sys-maint password = G0Gis29yv0dtUhng socket = /var/run/mysqld/mysqld.sock 使用默认用户登录\nmysql -u debian-sys-maint -p 选择 user 表\nuse mysql; 显示 user 表中的列\nshow fields from user; 修改密码\nupdate mysql.user set authentication_string=password(\u0026#39;123456\u0026#39;) where user=\u0026#39;root\u0026#39;; 允许远程登录\ngrant all on *.* to \u0026#39;wp_qx\u0026#39;@\u0026#39;%\u0026#39; identified by \u0026#39;qx,.3690\u0026#39;; FLUSH PRIVILEGES; 创建数据库\ncreate database db; 查看所有用户\nselect user,host from mysql.user; ","permalink":"https://wuxiaosu.github.io/posts/mysql/","summary":"mysql 相关  开启 mysql 远程访问  确认端口是否对外开放，默认是不开放的\nnetstat -an | grep 3306 输出如下\ntcp 0 0 127.0.0.1:3306 0.0.0.0:* LISTEN 修改配置文件（不同版本可能位置不同）\n/etc/mysql/mysql.conf.d/mysqld.cnf 注释掉\n# bind-address = 127.0.0.1  为新增主键赋值  SET@mycnt=0;UPDATExxxxxSETRowNum=(@mycnt:=@mycnt+1) 使用 native_password 连接  ALTERUSER\u0026#39;user\u0026#39;@\u0026#39;%\u0026#39;IDENTIFIEDWITHmysql_native_passwordBY\u0026#39;password\u0026#39;;flushprivileges; 使用默认密码修改数据库密码  查看默认用户密码\ncd /etc/mysql sudo cat debian.cnf # Automatically generated for Debian scripts. DO NOT TOUCH! [client] host = localhost user = debian-sys-maint password = G0Gis29yv0dtUhng socket = /var/run/mysqld/mysqld.sock [mysql_upgrade] host = localhost user = debian-sys-maint password = G0Gis29yv0dtUhng socket = /var/run/mysqld/mysqld.","title":"mysql 相关"},{"content":"新服务器配置  安装 mysql  sudo apt install mysql-server  安装 nginx  sudo apt install nginx  安装 openjdk  sudo apt-get install openjdk-8-jdk  安装 php、php-fpm、php-mysql  sudo apt-get install php sudo apt-get install php-fpm sudo apt-get install php-mysql  验证mysql 运行情况  sudo systemctl status mysql  首次以 root 身份登录  sudo mysql  修改密码  ALTER USER \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;root123xxx\u0026#39;; FLUSH PRIVILEGES; 创建用户\nGRANT ALL PRIVILEGES ON *.* TO \u0026#39;peter\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED BY \u0026#39;xxx.@123\u0026#39;; 停止服务\nsudo service mysql stop 重启服务\nsudo service mysql restart sudo service nginx restart ","permalink":"https://wuxiaosu.github.io/posts/%E6%96%B0%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/","summary":"新服务器配置  安装 mysql  sudo apt install mysql-server  安装 nginx  sudo apt install nginx  安装 openjdk  sudo apt-get install openjdk-8-jdk  安装 php、php-fpm、php-mysql  sudo apt-get install php sudo apt-get install php-fpm sudo apt-get install php-mysql  验证mysql 运行情况  sudo systemctl status mysql  首次以 root 身份登录  sudo mysql  修改密码  ALTER USER \u0026#39;root\u0026#39;@\u0026#39;localhost\u0026#39; IDENTIFIED WITH mysql_native_password BY \u0026#39;root123xxx\u0026#39;; FLUSH PRIVILEGES; 创建用户","title":"新服务器配置"},{"content":"Frida是个轻量级的hook框架。\n安装客户端 pip install frida pip install frida-tools 查看 frida 版本 frida --version 出现版本号表示安装成功\n在 Android 手机中安装服务端 在手机中查看设备信息\ngetprop ro.product.cpu.abi 输出结果\narm64-v8a 根据 cpu 版本去官网下载对应的 frida-server。\nfrida-server-12.8.14-android-arm64.xz 将下载并解压后的文件放到设备上\nadb push frida-server-12.8.14-android-arm64 /data/local/tmp 端口转发\nadb forward tcp:27042 tcp:27042 adb forward tcp:27043 tcp:27043 使用 root 权限运行 frida\nchmod 755 frida-server-12.8.14-android-arm64 ./frida-server-12.8.14-android-arm64 打开终端，查看 frida-server64 是否运行成功\nfrida-ps -U 出现设备进程信息表示运行成功。\n","permalink":"https://wuxiaosu.github.io/posts/frida%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/","summary":"Frida是个轻量级的hook框架。\n安装客户端 pip install frida pip install frida-tools 查看 frida 版本 frida --version 出现版本号表示安装成功\n在 Android 手机中安装服务端 在手机中查看设备信息\ngetprop ro.product.cpu.abi 输出结果\narm64-v8a 根据 cpu 版本去官网下载对应的 frida-server。\nfrida-server-12.8.14-android-arm64.xz 将下载并解压后的文件放到设备上\nadb push frida-server-12.8.14-android-arm64 /data/local/tmp 端口转发\nadb forward tcp:27042 tcp:27042 adb forward tcp:27043 tcp:27043 使用 root 权限运行 frida\nchmod 755 frida-server-12.8.14-android-arm64 ./frida-server-12.8.14-android-arm64 打开终端，查看 frida-server64 是否运行成功\nfrida-ps -U 出现设备进程信息表示运行成功。","title":"Frida安装教程"},{"content":"docker 常用操作  搜索镜像  docker search python  拉取镜像  docker pull python:3.7  镜像列表  docker images  正在运行的镜像列表  docker ps  使用镜像启动一个容器  docker run -itd openjdk:8  查看所有容器  docker ps -a  创建一个镜像  docker build -t docker_repo ./docker_repo  启动并直接进入镜像  docker run -it ubuntu:14.04 ","permalink":"https://wuxiaosu.github.io/posts/docker/","summary":"docker 常用操作  搜索镜像  docker search python  拉取镜像  docker pull python:3.7  镜像列表  docker images  正在运行的镜像列表  docker ps  使用镜像启动一个容器  docker run -itd openjdk:8  查看所有容器  docker ps -a  创建一个镜像  docker build -t docker_repo ./docker_repo  启动并直接进入镜像  docker run -it ubuntu:14.04 ","title":"docker 常用操作"},{"content":"git  Git 回退到某个 commit  git reset --hard HEAD^ 回退到上个版本 git reset --hard HEAD~3 回退到前3次提交之前，以此类推，回退到n次提交之前 git reset --hard commit_id 退到/进到 指定commit的sha码  强推到远程:  git push origin HEAD --force  合并某个提交:  git cherry-pick \u0026lt;commit id\u0026gt;  查看本地分支：  git branch  删除本地分支：  git branch -D tmp  查看 tag：  git tag  在某个 commit 上打 tag：  git tag test_tag c809ddbf83939a89659e51dc2a5fe183af384233  本地 tag 推送到线上：  git push origin test_tag  本地删除 tag：  git tag -d test_tag  删除线上 tag：  git push origin :refs/tags/test_tag  修改远程地址先删后加  git remote rm origin git remote add origin [url]  创建新分支  git branch develop  切换到该分支  git checkout develop  提交到该分支  git push -u origin develop  修改源  git remote set-url origin url ","permalink":"https://wuxiaosu.github.io/posts/git/","summary":"git  Git 回退到某个 commit  git reset --hard HEAD^ 回退到上个版本 git reset --hard HEAD~3 回退到前3次提交之前，以此类推，回退到n次提交之前 git reset --hard commit_id 退到/进到 指定commit的sha码  强推到远程:  git push origin HEAD --force  合并某个提交:  git cherry-pick \u0026lt;commit id\u0026gt;  查看本地分支：  git branch  删除本地分支：  git branch -D tmp  查看 tag：  git tag  在某个 commit 上打 tag：  git tag test_tag c809ddbf83939a89659e51dc2a5fe183af384233  本地 tag 推送到线上：  git push origin test_tag  本地删除 tag：  git tag -d test_tag  删除线上 tag：  git push origin :refs/tags/test_tag  修改远程地址先删后加  git remote rm origin git remote add origin [url]  创建新分支  git branch develop  切换到该分支  git checkout develop  提交到该分支  git push -u origin develop  修改源  git remote set-url origin url ","title":"git 常用操作"},{"content":"正则表达式 正则表达式是计算机科学的一个概念，正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。正则表达式通常用来检索、替换那些匹配某个模式的文本。\n元字符 所谓元字符就是指那些在正则表达式中具有特殊意义的专用字符。\n常用的元字符    代码 说明     . 匹配除换行符以外的任意字符   \\w 匹配字母或数字或下划线或汉字   \\s 匹配任意的空白符   \\d 匹配数字   \\b 匹配单词的开始或结束   \\B 非单词边界匹配   ^ 匹配字符串的开始   $ 匹配字符串的结束   （） 标记一个子表达式的开始和结束    字符转义 如果你想查找元字符的话，需要使用 \\ 来取消这些字符的特殊含义。比如要查找 . 的话需要使用 \\. ，要查找 \\ 需要使用 \\\\ 。\n限定符 指定数量的代码。\n常用的限定符    代码/语法 说明     * 重复0次或更多次   + 重复1次或更多次   ？ 重复0次或1次   {n} 重复 n 次   {n,} 重复 n 次或更多次   {n,m} 重复 n 到 m 次    范围表达式 用于指定一个字符范围。\n比如：\n[aeiou] ：任何一个元音字母。\n[0-9] : 0-9，即一位数字。\n[.?!] ： 标点符号 . 或者 ？ 或者 ！。\n[a-z0-9A-Z_] ： 匹配任意一位数字或字母或者下划线。\n分组 可以用小括号来指定 子表达式 （也叫做 分组），然后可以对子表达式进行一些操作。\n比如：\n(\\d{1,3}\\.){3}\\d{1,3} 是一个简单的 IP 地址匹配表达式，\\d{1,3} 匹配1到3位的数字，(\\d{1,3}\\.){3} 匹配1个数字加一个 .,然后（将表达式）重复3次，最后再加一个1到3位的数字 \\d{1,3}。\n分支条件 指的是有几种规则，如果满足其中任意一种规则都应该当成匹配。具体方式是使用 | 将条件分开。\n比如：\n0\\d{2}-\\d{8}|0\\d{3}-\\d{7} ： 匹配以 - 分割的电话号码：一种是3位区号，8位本地号码（010-12345678）；一种是4位区号，7位本地号码（0101-1234567）。\n零宽断言 用来查找在某些内容（但并不包括这些内容）之前之后的东西，也就是说它们像 \\b,^,$ 那样用于指定一个位置，这个位置需要满足一定的条件（即断言）。\n零宽度正预测先行断言 (?=exp)\n没找到原翻译出处，光是这么几个字真是不好记。可以简单理解为（断言）匹配一个位置，然后匹配出这个位置前的内容。\n比如： 用 \\b\\w+?(?=\\sjust) 查找 The things you say just might be true 会匹配出 say，可以理解为就是先用 \\sjust 匹配到位置，然后匹配到 just 前的一个单词。\n零宽度正回顾后发断言 (?\u0026lt;=exp)\n跟上面说的相反，断言自身的位置，然后匹配之后的内容。\n比如： 用 (?\u0026lt;=\\sjust\\s)\\b\\w+?\\b 查找 The things you say just might be true 会匹配出 might，可以理解为就是先用 \\sjust\\s 匹配到位置，然后匹配到 just 后的一个单词。\n负向零宽断言 跟零宽断言正好相反，用来确保某些内容没有出现。\n零宽度负预测先行断言 (?!exp)\n断言此位置后面不能匹配表达式exp。\n比如： 用 \\bto\\b\\s(?!take\\s) 查找 I am here to take you to a good life 就只能匹配出第二个 to，就是 to 的后面不能跟 take\\s。\n零宽度负回顾后发断言 (?\u0026lt;!exp\u0026gt;)\n断言此位置的前面不能匹配表达式。\n比如：\n用 (?\u0026lt;!here\\s)\\bto\\b 查找 I am here to take you to a good life 就只能匹配出第二个 to，就是不要 here\\s 后面跟着的 to。\n贪婪与懒惰 当正则表达式中包含能接受重复的限定符时，通常的行为是（在使整个表达式能得到匹配的前提下）匹配尽可能的字符。\n比如：\n用 a.*b 查找 aabab 的话，会匹配出 aabab，这就叫贪婪匹配。\n懒惰 有时候我们想匹配尽可能少的字符，只要在它后面加上一个问号 ？。这样就意味在匹配任意数量的重复，但是在能使整个匹配成功的前提下使用最少的重复。\n比如：\n用 a.*?b 匹配最短的，以 a 开始，以 b 结束的字符串。如果用于 aabab 的话，它会匹配 aab。\n懒惰限定符    代码 说明     .？ 重复任意次，但尽可能少重复   +？ 重复1次或更多次，但尽可能少重复   ？？ 重复0次或1次，但尽可能少重复   {n,m}? 重复n到m次，但尽可能少重复   {n,}? 重复n次以上，但尽可能少重复    ","permalink":"https://wuxiaosu.github.io/posts/%E6%AD%A3%E5%88%99/","summary":"正则表达式 正则表达式是计算机科学的一个概念，正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。正则表达式通常用来检索、替换那些匹配某个模式的文本。\n元字符 所谓元字符就是指那些在正则表达式中具有特殊意义的专用字符。\n常用的元字符    代码 说明     . 匹配除换行符以外的任意字符   \\w 匹配字母或数字或下划线或汉字   \\s 匹配任意的空白符   \\d 匹配数字   \\b 匹配单词的开始或结束   \\B 非单词边界匹配   ^ 匹配字符串的开始   $ 匹配字符串的结束   （） 标记一个子表达式的开始和结束    字符转义 如果你想查找元字符的话，需要使用 \\ 来取消这些字符的特殊含义。比如要查找 . 的话需要使用 \\. ，要查找 \\ 需要使用 \\\\ 。\n限定符 指定数量的代码。\n常用的限定符    代码/语法 说明     * 重复0次或更多次   + 重复1次或更多次   ？ 重复0次或1次   {n} 重复 n 次   {n,} 重复 n 次或更多次   {n,m} 重复 n 到 m 次    范围表达式 用于指定一个字符范围。","title":"正则表达式"},{"content":"ubuntu 防火墙  查看防火墙状态  sudo ufw status  允许访问端口  sudo ufw allow 9090/tcp  禁止访问端口  sudo ufw deny 9090  删除规则  sudo ufw delete deny 9090 ","permalink":"https://wuxiaosu.github.io/posts/ubuntu%E9%98%B2%E7%81%AB%E5%A2%99/","summary":"ubuntu 防火墙  查看防火墙状态  sudo ufw status  允许访问端口  sudo ufw allow 9090/tcp  禁止访问端口  sudo ufw deny 9090  删除规则  sudo ufw delete deny 9090 ","title":"ubuntu 防火墙"},{"content":"JetBrains 2020.3 系列通用重置 30 天试用（不会影响其他配置） 以 IntelliJIdea 为例  删除此目录下所有文件  C:\\Users\\Administrator\\AppData\\Roaming\\JetBrains\\IntelliJIdea2020.3\\eval  删除 other.xml 文件  C:\\Users\\Administrator\\AppData\\Roaming\\JetBrains\\IntelliJIdea2020.3\\options\\other.xml  删除注册表下所有项  计算机\\HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\jetbrains\\idea 其他诸如 DataGrip、PyCharm 类似 ","permalink":"https://wuxiaosu.github.io/posts/jetbrains/","summary":"JetBrains 2020.3 系列通用重置 30 天试用（不会影响其他配置） 以 IntelliJIdea 为例  删除此目录下所有文件  C:\\Users\\Administrator\\AppData\\Roaming\\JetBrains\\IntelliJIdea2020.3\\eval  删除 other.xml 文件  C:\\Users\\Administrator\\AppData\\Roaming\\JetBrains\\IntelliJIdea2020.3\\options\\other.xml  删除注册表下所有项  计算机\\HKEY_CURRENT_USER\\Software\\JavaSoft\\Prefs\\jetbrains\\idea 其他诸如 DataGrip、PyCharm 类似 ","title":"JetBrains 重置试用"},{"content":"0.省流助手 密码就是 md5(imei + uin) 取前七位，最新使用 8.0.28 验证还是可以的\n1.获取相关参数  查找主数据文件路径（当然是需要 root 权限了）  ls -l /data/user/0/com.tencent.mm/MicroMsg/*/EnMicroMsg.db 如果出现多个文件的话，说明登录过多个微信号，看日期最新的就是当前登录的号了\n 查看 _auth_uin 值  cat /data/data/com.tencent.mm/shared_prefs/auth_info_key_prefs.xml 正常的话应该是下面这样\n\u0026lt;?xml version=\u0026#39;1.0\u0026#39; encoding=\u0026#39;utf-8\u0026#39; standalone=\u0026#39;yes\u0026#39; ?\u0026gt; \u0026lt;map\u0026gt; \u0026lt;boolean name=\u0026#34;auth_info_prefs_use_new_ecdh\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;int name=\u0026#34;_auth_uin\u0026#34; value=\u0026#34;1054025641\u0026#34; /\u0026gt; \u0026lt;boolean name=\u0026#34;key_auth_info_prefs_created\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;int name=\u0026#34;key_auth_update_version\u0026#34; value=\u0026#34;671094359\u0026#34; /\u0026gt; \u0026lt;string name=\u0026#34;server_id\u0026#34;\u0026gt;4f031802000000000d385cc7c40600\u0026lt;/string\u0026gt; \u0026lt;string name=\u0026#34;_auth_key\u0026#34;\u0026gt;0a2408201220b9be5667ec69984f48ba4923c4e045eef3837d61871b7da350accb7b8a56405212b90108b30112b30108994e12a70186e1f98b9239ec3db321b36332fcc097ab11f7c173f6eb1b1411fd2afad5ce00e2b1e1e1b9588b0377bd47cb2db230d17fa9178a05791bb2725ff01c4df06a578a23b192a4e19f4c794e67dda2813522faa97dba324e0ef6b14c8b3e07dc0c11a5ca551f398832212aa9591a66b3be97c24f46b5dfd2299e4392f038da3f8f7e4bc602c3d2927232b30303664c5f00f624142231bc084ae8e04efe643481a23edc12091d8ceaf318bfa6ddb40a\u0026lt;/string\u0026gt;  查看设备 imei 值  getprop | grep imei [persist.radio.imei1]: [868619036811436] [persist.radio.imei2]: [868619036811444] [ro.ril.miui.imei0]: [868619036811436] [ro.ril.miui.imei1]: [868619036811444] 2.计算数据库密码  计算 imei + uin 的 md5  echo -n \u0026#34;8686190368114361054025641\u0026#34;|md5sum  密码取前七位（小写）  如果有多个 imei 那就都试一下\necho -n \u0026#34;8686190368114441054025641\u0026#34;|md5sum 如果都不对的话，那可能是微信拿不到 imei ，使用的默认值 1234567890ABCDEF\necho -n \u0026#34;1234567890ABCDEF1054025641\u0026#34;|md5sum ","permalink":"https://wuxiaosu.github.io/posts/%E5%BE%AE%E4%BF%A1%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%86%E7%A0%81%E8%AE%A1%E7%AE%97/","summary":"0.省流助手 密码就是 md5(imei + uin) 取前七位，最新使用 8.0.28 验证还是可以的\n1.获取相关参数  查找主数据文件路径（当然是需要 root 权限了）  ls -l /data/user/0/com.tencent.mm/MicroMsg/*/EnMicroMsg.db 如果出现多个文件的话，说明登录过多个微信号，看日期最新的就是当前登录的号了\n 查看 _auth_uin 值  cat /data/data/com.tencent.mm/shared_prefs/auth_info_key_prefs.xml 正常的话应该是下面这样\n\u0026lt;?xml version=\u0026#39;1.0\u0026#39; encoding=\u0026#39;utf-8\u0026#39; standalone=\u0026#39;yes\u0026#39; ?\u0026gt; \u0026lt;map\u0026gt; \u0026lt;boolean name=\u0026#34;auth_info_prefs_use_new_ecdh\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;int name=\u0026#34;_auth_uin\u0026#34; value=\u0026#34;1054025641\u0026#34; /\u0026gt; \u0026lt;boolean name=\u0026#34;key_auth_info_prefs_created\u0026#34; value=\u0026#34;true\u0026#34; /\u0026gt; \u0026lt;int name=\u0026#34;key_auth_update_version\u0026#34; value=\u0026#34;671094359\u0026#34; /\u0026gt; \u0026lt;string name=\u0026#34;server_id\u0026#34;\u0026gt;4f031802000000000d385cc7c40600\u0026lt;/string\u0026gt; \u0026lt;string name=\u0026#34;_auth_key\u0026#34;\u0026gt;0a2408201220b9be5667ec69984f48ba4923c4e045eef3837d61871b7da350accb7b8a56405212b90108b30112b30108994e12a70186e1f98b9239ec3db321b36332fcc097ab11f7c173f6eb1b1411fd2afad5ce00e2b1e1e1b9588b0377bd47cb2db230d17fa9178a05791bb2725ff01c4df06a578a23b192a4e19f4c794e67dda2813522faa97dba324e0ef6b14c8b3e07dc0c11a5ca551f398832212aa9591a66b3be97c24f46b5dfd2299e4392f038da3f8f7e4bc602c3d2927232b30303664c5f00f624142231bc084ae8e04efe643481a23edc12091d8ceaf318bfa6ddb40a\u0026lt;/string\u0026gt;  查看设备 imei 值  getprop | grep imei [persist.radio.imei1]: [868619036811436] [persist.radio.imei2]: [868619036811444] [ro.ril.miui.imei0]: [868619036811436] [ro.ril.miui.imei1]: [868619036811444] 2.计算数据库密码  计算 imei + uin 的 md5  echo -n \u0026#34;8686190368114361054025641\u0026#34;|md5sum  密码取前七位（小写）  如果有多个 imei 那就都试一下","title":"Android微信数据库密码计算"},{"content":"pip切换国内源 pip切换国内源\n1.pip 国内的一些镜像 阿里云 http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 豆瓣(douban) http://pypi.douban.com/simple/ 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/ 2.临时修改 可以在使用 pip 的时候在后面加上 -i 参数，指定 pip 源\n$ pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple 3.永久修改 1.Linux 修改 ~/.pip/pip.conf (没有就创建一个)， 内容如下：\n[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple 2.Windows 直接在 user 目录中创建一个 pip 目录，如：C:\\Users\\xx\\pip，新建文件 pip.ini ，内容如下\n[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple ","permalink":"https://wuxiaosu.github.io/posts/pip%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/","summary":"pip切换国内源 pip切换国内源\n1.pip 国内的一些镜像 阿里云 http://mirrors.aliyun.com/pypi/simple/ 中国科技大学 https://pypi.mirrors.ustc.edu.cn/simple/ 豆瓣(douban) http://pypi.douban.com/simple/ 清华大学 https://pypi.tuna.tsinghua.edu.cn/simple/ 中国科学技术大学 http://pypi.mirrors.ustc.edu.cn/simple/ 2.临时修改 可以在使用 pip 的时候在后面加上 -i 参数，指定 pip 源\n$ pip install scrapy -i https://pypi.tuna.tsinghua.edu.cn/simple 3.永久修改 1.Linux 修改 ~/.pip/pip.conf (没有就创建一个)， 内容如下：\n[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple 2.Windows 直接在 user 目录中创建一个 pip 目录，如：C:\\Users\\xx\\pip，新建文件 pip.ini ，内容如下\n[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple ","title":"pip切换国内源"},{"content":"WSL Ubuntu18.04LTS 更换国内源 WSL Ubuntu18.04LTS 更换国内源\n1.查看 Linux 版本 $ lsb_release -a No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 18.04.1 LTS Release: 18.04 Codename: bionic 2.备份数据源 $ sudo cp /etc/apt/sources.list /etc/apt/sources-backup.list 3.更换数据源 $ sudo vim /etc/apt/sources.list 更换源内容\n1.阿里源 deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse 2.163 源 deb http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-security main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-updates main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-proposed main restricted universe multiverse deb-src http://mirrors.163.com/ubuntu/ bionic-backports main restricted universe multiverse 3.中科大源 deb https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-security main restricted universe multiverse deb https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse deb-src https://mirrors.ustc.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse 4.更新源 $ sudo apt-get update $ sudo apt-get upgrade ","permalink":"https://wuxiaosu.github.io/posts/wsl%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/","summary":"WSL Ubuntu18.04LTS 更换国内源 WSL Ubuntu18.04LTS 更换国内源\n1.查看 Linux 版本 $ lsb_release -a No LSB modules are available. Distributor ID: Ubuntu Description: Ubuntu 18.04.1 LTS Release: 18.04 Codename: bionic 2.备份数据源 $ sudo cp /etc/apt/sources.list /etc/apt/sources-backup.list 3.更换数据源 $ sudo vim /etc/apt/sources.list 更换源内容\n1.阿里源 deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse deb http://mirrors.","title":"WSL更换国内源"},{"content":"苟且在广州，勉强算个程序员吧。\n","permalink":"https://wuxiaosu.github.io/posts/about/","summary":"苟且在广州，勉强算个程序员吧。","title":"关于我"},{"content":"Android 8.0 以上开启全局可调式   1.安装好 Magisk\n  2.终端执行\n  adb shell su magisk resetprop ro.debuggable 1  3.重启 system server  stop;start  4.重启手机会失效  ","permalink":"https://wuxiaosu.github.io/posts/android8.0%E4%BB%A5%E4%B8%8A%E5%BC%80%E5%90%AF%E5%85%A8%E5%B1%80%E5%8F%AF%E8%B0%83%E5%BC%8F/","summary":"Android 8.0 以上开启全局可调式   1.安装好 Magisk\n  2.终端执行\n  adb shell su magisk resetprop ro.debuggable 1  3.重启 system server  stop;start  4.重启手机会失效  ","title":"Android 8.0 以上开启全局可调式"},{"content":"1.安装好 Magisk 此处略过\n2.安装 MagiskHidePropsConf  下载地址 https://github.com/Magisk-Modules-Repo/MagiskHidePropsConf/releases 安装完成后重启  3.按流程操作  重启进入终端 按流程一步一步操作就行了  adb shell props MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== Select an option below. ===================================== 1 - Edit device fingerprint 2 - Force BASIC key attestation 3 - Device simulation (disabled) 4 - Edit MagiskHide props (active) 5 - Add/edit custom props 6 - Delete prop values 7 - Script settings 8 - Collect logs u - Perform module update check r - Reset all options/settings b - Reboot device e - Exit See the module readme or the support thread @ XDA for details. Enter your desired option: 5 MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== Custom props Select an option below: ===================================== Set or edit custom prop values for your device. Currently no custom props set. Please add one by selecting \u0026#34;New custom prop\u0026#34; below. n - New custom prop b - Go back to main menu e - Exit See the module readme or the support thread @ XDA for details. Enter your desired option: n MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== New custom prop ===================================== Enter the prop to set. Example: ro.sf.lcd_density b - Go back e - Exit Enter your desired option: ro.debuggable MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== ro.debuggable ===================================== ro.debuggable is one of the sensitive props that can be set by the MagiskHide props option. Are you sure you want to proceed? y - Yes n - No e - Exit Enter your desired option: y MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== ro.debuggable ===================================== Enter the value you want to set ro.debuggable to, or select from the options below. The currently set value is: 0 Please enter the new value. b - Go back e - Exit Enter your desired option: 1 MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== ro.debuggable ===================================== This will set ro.debuggable to: 1 Pick an option below to change what boot stage the prop will be set in, or set/reset a delay: 1 - Default (current) 2 - post-fs-data 3 - late_start service 4 - Both boot stages d - Delay Do you want to continue? Enter y(es), n(o), e(xit) or an option from above: y Working. Please wait... Working. Please wait... Working. Please wait... Working. Please wait... Working. Please wait... MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== Reboot - ro.debuggable ===================================== Reboot for changes to take effect. Do you want to reboot now (y/n)? Enter y(es), n(o) or e(xit): y Rebooting... ","permalink":"https://wuxiaosu.github.io/posts/%E4%BD%BF%E7%94%A8magiskhide%E5%BC%80%E5%90%AF%E5%85%A8%E5%B1%80%E5%8F%AF%E8%B0%83%E8%AF%95/","summary":"1.安装好 Magisk 此处略过\n2.安装 MagiskHidePropsConf  下载地址 https://github.com/Magisk-Modules-Repo/MagiskHidePropsConf/releases 安装完成后重启  3.按流程操作  重启进入终端 按流程一步一步操作就行了  adb shell props MagiskHide Props Config v6.1.2 by Didgeridoohan @ XDA Developers ===================================== Select an option below. ===================================== 1 - Edit device fingerprint 2 - Force BASIC key attestation 3 - Device simulation (disabled) 4 - Edit MagiskHide props (active) 5 - Add/edit custom props 6 - Delete prop values 7 - Script settings 8 - Collect logs u - Perform module update check r - Reset all options/settings b - Reboot device e - Exit See the module readme or the support thread @ XDA for details.","title":"使用MagiskHidePropsConf开启全局可调试"}]