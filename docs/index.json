[{"content":"1.命令行安装 直接在终端运行命令进行安装\n$ sudo apt install nginx 如果需要自定义安装，可以参考官方文档\nhttp://nginx.org/en/linux_packages.html#Ubuntu\n在浏览器输入服务器地址，出现 nginx 默认页面表示安装成功\n2.查看默认配置 $ cat /etc/nginx/nginx.conf user www-data; worker_processes auto; pid /run/nginx.pid; include /etc/nginx/modules-enabled/*.conf; events { worker_connections 768; # multi_accept on; } http { ## # Basic Settings ## sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; # server_tokens off; # server_names_hash_bucket_size 64; # server_name_in_redirect off; include /etc/nginx/mime.types; default_type application/octet-stream; ## # SSL Settings ## ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE ssl_prefer_server_ciphers on; ## # Logging Settings ## access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; ## # Gzip Settings ## gzip on; # gzip_vary on; # gzip_proxied any; # gzip_comp_level 6; # gzip_buffers 16 8k; # gzip_http_version 1.1; # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; ## # Virtual Host Configs ## include /etc/nginx/conf.d/*.conf; include /etc/nginx/sites-enabled/*; } #mail { # # See sample authentication script at: # # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript #  # # auth_http localhost/auth.php; # # pop3_capabilities \u0026#34;TOP\u0026#34; \u0026#34;USER\u0026#34;; # # imap_capabilities \u0026#34;IMAP4rev1\u0026#34; \u0026#34;UIDPLUS\u0026#34;; #  # server { # listen localhost:110; # protocol pop3; # proxy on; # } #  # server { # listen localhost:143; # protocol imap; # proxy on; # } #} 默认页面的服务器对应这一行配置\ninclude /etc/nginx/sites-enabled/*; 再看一下默认配置长什么样\n$ cat /etc/nginx/sites-enabled/default ## # You should look at the following URL\u0026#39;s in order to grasp a solid understanding # of Nginx configuration files in order to fully unleash the power of Nginx. # https://www.nginx.com/resources/wiki/start/ # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/ # https://wiki.debian.org/Nginx/DirectoryStructure # # In most cases, administrators will remove this file from sites-enabled/ and # leave it as reference inside of sites-available where it will continue to be # updated by the nginx packaging team. # # This file will automatically load configuration files provided by other # applications, such as Drupal or Wordpress. These applications will be made # available underneath a path with that package name, such as /drupal8. # # Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples. ## # Default server configuration # server { listen 80 default_server; listen [::]:80 default_server; # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic. # See: https://bugs.debian.org/773332 # # Read up on ssl_ciphers to ensure a secure configuration. # See: https://bugs.debian.org/765782 # # Self signed certs generated by the ssl-cert package # Don\u0026#39;t use them in a production server! # # include snippets/snakeoil.conf; root /var/www/html; # Add index.php to the list if you are using PHP index index.html index.htm index.nginx-debian.html; server_name _; location / { # First attempt to serve request as file, then # as directory, then fall back to displaying a 404. try_files $uri $uri/ =404; } # pass PHP scripts to FastCGI server # #location ~ \\.php$ { # include snippets/fastcgi-php.conf; # # # With php-fpm (or other unix sockets): # fastcgi_pass unix:/var/run/php/php7.4-fpm.sock; # # With php-cgi (or other tcp sockets): # fastcgi_pass 127.0.0.1:9000; #} # deny access to .htaccess files, if Apache\u0026#39;s document root # concurs with nginx\u0026#39;s one # #location ~ /\\.ht { # deny all; #} } # Virtual Host configuration for example.com # # You can move that to a different file under sites-available/ and symlink that # to sites-enabled/ to enable it. # #server { # listen 80; # listen [::]:80; # # server_name example.com; # # root /var/www/example.com; # index index.html; # # location / { # try_files $uri $uri/ =404; # } #} 可以看到只配置了一个静态页面 注释掉默认配置\n# include /etc/nginx/sites-enabled/*; 3.添加自定义配置 在配置文件目录 /etc/nginx/conf.d/ 下添加自己的配置并保存\n4.检查配置是否正确 $ sudo nginx -t 出现以下内容表示没问题了\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful 配置没问题的话就可以重启服务器了\n$ sudo service nginx restart 然后就可以愉快的使用啦\n","permalink":"https://wuxiaosu.github.io/posts/ubuntu%E5%AE%89%E8%A3%85nginx/","summary":"1.命令行安装 直接在终端运行命令进行安装\n$ sudo apt install nginx 如果需要自定义安装，可以参考官方文档\nhttp://nginx.org/en/linux_packages.html#Ubuntu\n在浏览器输入服务器地址，出现 nginx 默认页面表示安装成功\n2.查看默认配置 $ cat /etc/nginx/nginx.conf user www-data; worker_processes auto; pid /run/nginx.pid; include /etc/nginx/modules-enabled/*.conf; events { worker_connections 768; # multi_accept on; } http { ## # Basic Settings ## sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; # server_tokens off; # server_names_hash_bucket_size 64; # server_name_in_redirect off; include /etc/nginx/mime.types; default_type application/octet-stream; ## # SSL Settings ## ssl_protocols TLSv1 TLSv1.1 TLSv1.","title":"Ubuntu安装nginx"},{"content":"0.下载 baksmali.jar 、smali.jar 下载地址 https://bitbucket.org/JesusFreke/smali/downloads/\nGithub 地址 https://github.com/JesusFreke/smali\n1. odex -\u0026gt; smali files 把手机系统 /system/framework 下的内容拷贝到工作目录，和需要转换的 .odex、.vdex 文件也拷贝至目录，目录结构如下\n-system -a.odex -a.vdex -baksmali-2.5.2.jar -smali-2.5.2.jar 然后执行以下命令\njava -jar baksmali-2.5.2.jar deodex a.odex -b ./system/framework/arm64/boot.oat -o out -deodex : 指定 odex 文件\n-b : 指定 bootclasspath 文件\n-o : 指定 smali 输出目录\n2. smali files -\u0026gt; dex java -jar smali-2.5.2.jar assemble out -o a.dex -assemble : 指定 smali files 文件夹\n-o : 指定输出文件名\n3. 更多 https://www.cnblogs.com/ysk-china/p/7162203.html?utm_source=itdadao\u0026amp;utm_medium=referral\n","permalink":"https://wuxiaosu.github.io/posts/android%E5%8F%8D%E7%BC%96%E8%AF%91odex/","summary":"0.下载 baksmali.jar 、smali.jar 下载地址 https://bitbucket.org/JesusFreke/smali/downloads/\nGithub 地址 https://github.com/JesusFreke/smali\n1. odex -\u0026gt; smali files 把手机系统 /system/framework 下的内容拷贝到工作目录，和需要转换的 .odex、.vdex 文件也拷贝至目录，目录结构如下\n-system -a.odex -a.vdex -baksmali-2.5.2.jar -smali-2.5.2.jar 然后执行以下命令\njava -jar baksmali-2.5.2.jar deodex a.odex -b ./system/framework/arm64/boot.oat -o out -deodex : 指定 odex 文件\n-b : 指定 bootclasspath 文件\n-o : 指定 smali 输出目录\n2. smali files -\u0026gt; dex java -jar smali-2.5.2.jar assemble out -o a.dex -assemble : 指定 smali files 文件夹\n-o : 指定输出文件名\n3. 更多 https://www.","title":"Android反编译odex"},{"content":"0.省流助手 pyinstaller -F myfile.py 1.安装 Pyinstaller 1.1 先安装 pywin32 pip install pywin32 1.2 再安装 Pyinstaller pip install PyInstaller 2.使用 Pyinstaller pyinstaller -F myfile.py 2.1 输入参数含义 -F, --onefile 生成单个可执行文件 如果一切正常，会在 .py 文件同目录下的 dist 目录生成 .exe 文件\n查看更多参数\npyinstaller -h ","permalink":"https://wuxiaosu.github.io/posts/python%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85/","summary":"0.省流助手 pyinstaller -F myfile.py 1.安装 Pyinstaller 1.1 先安装 pywin32 pip install pywin32 1.2 再安装 Pyinstaller pip install PyInstaller 2.使用 Pyinstaller pyinstaller -F myfile.py 2.1 输入参数含义 -F, --onefile 生成单个可执行文件 如果一切正常，会在 .py 文件同目录下的 dist 目录生成 .exe 文件\n查看更多参数\npyinstaller -h ","title":"Python文件打包"},{"content":" http://ipinfo.io/json  { \u0026#34;ip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;hostname\u0026#34;: \u0026#34;132.111.42.59.broad.gz.gd.dynamic.163data.com.cn\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Lianjiang\u0026#34;, \u0026#34;region\u0026#34;: \u0026#34;Guangdong\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CN\u0026#34;, \u0026#34;loc\u0026#34;: \u0026#34;21.6467,110.2817\u0026#34;, \u0026#34;org\u0026#34;: \u0026#34;AS4134 CHINANET-BACKBONE\u0026#34;, \u0026#34;timezone\u0026#34;: \u0026#34;Asia/Urumqi\u0026#34;, \u0026#34;readme\u0026#34;: \u0026#34;https://ipinfo.io/missingauth\u0026#34; }  http://whois.pconline.com.cn/ip.jsp  广东省广州市天河区 电信ADSL  http://pv.sohu.com/cityjson?ie=utf-8  var returnCitySN = {\u0026#34;cip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;cid\u0026#34;: \u0026#34;440106\u0026#34;, \u0026#34;cname\u0026#34;: \u0026#34;广东省广州市天河区\u0026#34;}; ","permalink":"https://wuxiaosu.github.io/posts/%E5%87%A0%E4%B8%AAip%E4%BF%A1%E6%81%AF%E8%8E%B7%E5%8F%96%E6%8E%A5%E5%8F%A3/","summary":" http://ipinfo.io/json  { \u0026#34;ip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;hostname\u0026#34;: \u0026#34;132.111.42.59.broad.gz.gd.dynamic.163data.com.cn\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Lianjiang\u0026#34;, \u0026#34;region\u0026#34;: \u0026#34;Guangdong\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CN\u0026#34;, \u0026#34;loc\u0026#34;: \u0026#34;21.6467,110.2817\u0026#34;, \u0026#34;org\u0026#34;: \u0026#34;AS4134 CHINANET-BACKBONE\u0026#34;, \u0026#34;timezone\u0026#34;: \u0026#34;Asia/Urumqi\u0026#34;, \u0026#34;readme\u0026#34;: \u0026#34;https://ipinfo.io/missingauth\u0026#34; }  http://whois.pconline.com.cn/ip.jsp  广东省广州市天河区 电信ADSL  http://pv.sohu.com/cityjson?ie=utf-8  var returnCitySN = {\u0026#34;cip\u0026#34;: \u0026#34;59.42.111.132\u0026#34;, \u0026#34;cid\u0026#34;: \u0026#34;440106\u0026#34;, \u0026#34;cname\u0026#34;: \u0026#34;广东省广州市天河区\u0026#34;}; ","title":"几个ip信息获取接口"},{"content":"苟且在广州，勉强算个程序员吧。\n","permalink":"https://wuxiaosu.github.io/posts/about/","summary":"苟且在广州，勉强算个程序员吧。","title":"关于我"}]